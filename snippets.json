{
  "IF ELSEIF ELSE END": {
      "prefix": [
          "IF ELSEIF ELSE END"
        ],
        "body": [
          "IF ${1:condition} THEN ",
          "\t# DO THIS IF TRUE ",
          "ELSEIF ${2:condition} THEN",
          "\t#(OPTIONAL ELSEIF)",
          "ELSE",
          "\t# Do this if all above are false",
          "END"
        ],
        "description": "A sample IF ELSEIF ELSE structure"
    },
    
  "WHILE DO END": {
      "prefix": [
        "WHILE"
      ],
      "body": [
          "WHILE ${1:condition} DO ",
          "\t #Contents of the LOOP",
          "END"
      ],
      "description": "A sample WHILE DO Loop"
    },

  "TABLECREATE": {
    "prefix": [
      "TABLECREATE"
    ],
    "body": [
          "TABLECREATE( ${1:TableField} )"
    ],
    "description": "Creates an entry on a table."
  },

  "TABLEAMEND": {
    "prefix": [
      "TABLEAMEND"
    ],
    "body": [
          "TABLEAMEND( ${1:TableField} )"
    ],
    "description": "Amends an entry on a table."
  },

  "TABLESAVE": {
    "prefix": [
      "TABLESAVE"
    ],
    "body": [
          "TABLESAVE( ${1:TableField} )"
    ],
    "description": "Saves an entry on a table."
  },

  "TABLEDELETE": {
    "prefix": [
      "TABLEDELETE"
    ],
    "body": [
          "TABLEDELETE( ${1:TableField} )"
    ],
    "description": "Deletes an entry on a table."
  },   

  "TABLECANCEL": {
    "prefix": [
      "TABLECANCEL"
    ],
    "body": [
          "TABLECANCEL( ${1:TableField} )"
    ],
    "description": "Cancels an update to an entry on a table."
  },

  "TABLECOUNT": {
    "prefix": [
      "TABLECOUNT"
    ],
    "body": [
          "vTableCount = TABLECOUNT( ${1:TableField} )"
    ],
    "description": "Counts the amount of rows and put it into a variable."
  },

  "TABLEFIRST": {
    "prefix": [
      "TABLEFIRST"
    ],
    "body": [
          "TABLEFIRST( ${1:TableField} )"
    ],
    "description": "Gets/selects the first table entry"
  },

  "TABLEGETCURRENT": {
    "prefix": [
      "TABLEGETCURRENT"
    ],
    "body": [
          "${1:Local Variable Name} = TABLEGETCURRENT( ${2:TableField} )"
    ],
    "description": "Gets/selects the current row ID in the table"
  },

  "TABLELAST": {
    "prefix": [
      "TABLELAST"
    ],
    "body": [
          "TABLELAST( ${1:TableField} )"
    ],
    "description": "Gets/selects the last table entry"
  },

  "TABLENEXT": {
    "prefix": [
      "TABLENEXT"
    ],
    "body": [
          "TABLENEXT( ${1:TableField} )"
    ],
    "description": "Gets/selects the next table entry"
  },

  "TABLEPREVIOUS": {
    "prefix": [
      "TABLEPREVIOUS"
    ],
    "body": [
          "TABLEPREVIOUS( ${1:TableField} )"
    ],
    "description": "Gets/selects the previous table entry"
  }, 

  "TABLEREFESHALL": {
    "prefix": [
      "TABLEREFESHALL"
    ],
    "body": [
          "TABLEREFESHALL( ${1:TableField} )"
    ],
    "description": "Used to refresh all entries in the table when viewed on screen"
  }, 

  "TABLEREFESHCURRENT": {
    "prefix": [
      "TABLEREFESHCURRENT"
    ],
    "body": [
          "TABLEREFESHCURRENT( ${1:TableField} )"
    ],
    "description": "Used to refresh the current row in the table"
  }, 

  "TABLEREFESHSELECTED": {
    "prefix": [
      "TABLEREFESHSELECTED"
    ],
    "body": [
          "TABLEREFESHSELECTED( ${1:TableField} )"
    ],
    "description": "Used to refresh the view of the table, to show only selected rows following a TableSelect command"
  }, 

  "TABLERESET": {
    "prefix": [
      "TABLERESET"
    ],
    "body": [
          "TABLERESET( ${1:TableField} )"
    ],
    "description": "Used to reset the table view after a TableSelect has been used to undo any filters on the table"
  },
 
  "TEXT": {
    "prefix": [
        "TEXT"
    ],
    "body": [
      "TEXT( ${1:TextToConvert} )"
    ],
    "description": [
        "Converts any variable type (number, decimal, date)  into a string."
    ]
  },

  "LENGTH": {
    "prefix": [
        "LENGTH"
    ],
    "body": [
      "vLength = LENGTH( ${1:field or Text} )"
    ],
    "description": [
        "returns the length of the text"
    ]
  },

  "SPLIT": {
    "prefix": [
        "SPLIT"
    ],
    "body": [
      "vString = SPLIT( ${1:field or Text} , ${2:Start} , ${3:Length} )"
    ],
    "description": [
        "extract some or all characters from a text item \n {field} is the text from which the characters are to be extracted \n <start> is the start position for the extraction \n <length> is the number of characters to be extracted \n e.g. SPLIT( “This is a test” , 6 , 4 ) = “is a” "
    ]
  },  

  "ASC": {
    "prefix": [
        "ASC"
    ],
    "body": [
      "vAscii = ASC( ${1:Single Character} )"
    ],
    "description": [
        "returns the ASCII value of the character supplied \n e.g. result = ASC(“A”) : result will be 65"
    ]
  },
  "CHR": {
    "prefix": [
        "CHR"
    ],
    "body": [
      "vChar = CHR( ${1:ASCII Number} )"
    ],
    "description": [
        "returns the ASCII character value from 32 to 255"
    ]
  },
  
  "QUESTION": {
    "prefix": [
      "QUESTION"
    ],
    "body": [
      "QUESTION( ${1:Question Text} , ${2:Type of Question} )",
      "IF RETURN-STATE = \"CANCEL\" THEN",
      "\t # User pressed Cancel - do something",
      "ELSE",
      "\t #User pressed OK - the variable RETURN-VALUE contains the user's input",
      "\t MESSAGE (\"You entered: \", RETURN-VALUE)",
      "END"
    ],
    "description": [
        "Displays a Question to the user, The variable RETURN-STATE tells you whether the user cancelled the input or not. The variable RETURN-VALUE is the user's input"
      ]   
},

  "MESSAGE": {
    "prefix": [
          "MESSAGE"
    ],
    "body": [
        "MESSAGE( ${1:String} )"
    ],
    "description": [
        "Displays a pop-up of the string: Useful for debugging"
    ]
  },

  "PUT": {
      "prefix": [
        "PUT"
      ],
      "body": [
          "PUT( ${1:Value} , ${2:FieldName} )"
      ],
      "description": "PUT commands stores whatever the first argument is into a database field"
  },

  "GLOBAL-VARIABLE": {
    "prefix": [
      "GLOBAL-VARIABLE"
    ],
    "body": [
        "${1:Local Variable Name} = GLOBAL-VARIABLE( \"${2:Global Variable Name}\" ) "
    ],
    "description": "Gets a global variable, Pair this with SET-GLOBAL-VARIABLE"
  }, 

  "SET-GLOBAL-VARIABLE": {
    "prefix": [
      "SET-GLOBAL-VARIABLE"
    ],
    "body": [
        " SET-GLOBAL-VARIABLE( \"${1:Global Variable Name}\" , \"${2:Value}\" ) "
    ],
    "description": "Sets a Global Variable. When using this fuction make sure you use a CLEAR-GLOBAL-VARIBALE"
  },

  "CLEAR-GLOBAL-VARIABLE": {
    "prefix": [
      "CLEAR-GLOBAL-VARIABLE"
    ],
    "body": [
        "CLEAR-GLOBAL-VARIABLE( ${1:USERNAME} )"
    ],
    "description": "Clears the global variables. You require the username, Mostly commonly USERNAME (The user that is currently logged in)"
  },

  "DATE": {
    "prefix": [
      "DATE"
    ],
    "body": [
        "vDate = DATE( ${1:dd} , ${2:mm} , ${3:yyyy})"
    ],
    "description": "converts three integer values for day, month and year into a date field"
  },

  "CDATE": {
    "prefix": [
      "CDATE"
    ],
    "body": [
        "vDate = CDATE( ${1:Date Field} )"
    ],
    "description": "converts a character representation of a date into a date field. \n If entering a date as a fixed value, ensure this is enclosed in speech marks \n (eg – result = CDATE (\"01/05/2015\")"
  },


  "DAY": {
    "prefix": [
      "DAY"
    ],
    "body": [
        "vDay = DAY( ${1:Date Field} )"
    ],
    "description": "returns the DAY part of a date"
  },

  "MONTH": {
    "prefix": [
      "MONTH"
    ],
    "body": [
        "vMonth = MONTH( ${1:Date Field} )"
    ],
    "description": "returns the MONTH part of a date"
  },  
  
  "YEAR": {
    "prefix": [
      "YEAR"
    ],
    "body": [
        "vYear = YEAR( ${1:Date Field} )"
    ],
    "description": "returns the YEAR part of a date"
  }, 

  "WEEKDAY": {
    "prefix": [
      "WEEKDAY"
    ],
    "body": [
        "vDay =  WEEKDAY( ${2:Date Field} )"
    ],
    "description": "returns the name of the day occurring on the date entered"
  }, 

  "DAYS-FROM-TODAY": {
    "prefix": [
      "DAYS-FROM-TODAY"
    ],
    "body": [
        "vCount =  DAYS-FROM-TODAY( ${2:Date Field} )"
    ],
    "description": "returns the number of days to the date entered from today"
  }, 

  "DATE-FROM-TODAY": {
    "prefix": [
      "DATE-FROM-TODAY"
    ],
    "body": [
        "vDate =  DATE-FROM-TODAY( ${2:Field or Number} )"
    ],
    "description": "returns the date of the days entered from today. Can be + or a -"
  },

  "CREATE": {
    "prefix": [
      "CREATE"
    ],
    "body": [
        "CREATE( ${1:<Case Number>} , ${2:Case Type Number} )"
    ],
    "description": "create a new case in the specified Case Type (see Case Type Maintenance for the matching number). \n Case number can be blank (\"\") to create the next case in the autonumber sequence"
  },

  "OPEN": {
    "prefix": [
      "OPEN"
    ],
    "body": [
        "OPEN( ${1:<Case Number>} , \"LOCK\" )"
    ],
    "description": "open a new case for observation or editing"
  }, 

  "UPDATE": {
    "prefix": [
      "UPDATE"
    ],
    "body": [
        "UPDATE( ${1:<Case Number>} , \"\" )"
    ],
    "description": "update the database with current changes, keeping the case locked to the current user"
  }, 

  "UPDATE UNLOCK": {
    "prefix": [
      "UPDATE"
    ],
    "body": [
        "UPDATE( ${1:<Case Number>} , \"UNLOCK\" )"
    ],
    "description": "save and release the lock on an open case"
  },

  "CLOSE": {
    "prefix": [
      "CLOSE"
    ],
    "body": [
        "CLOSE( ${1:<Case Number>} )"
    ],
    "description": "close the case (E.G when finished after create or open)"
  },

  "STATUS": {
    "prefix": [
      "STATUS"
    ],
    "body": [
        "STATUS( ${1:<Case Number>} )",
      "IF RETURN-VALUE = \"available\" THEN",
      "\t #Case is not locked and available for editing. Let's open and lock it to us:",
      "\t PUT( ${1:<Case Number>}, ${2:<Links field.Link Case Ref>})",
      "\t OPEN(${1:<Case Number>},\"LOCK\")",
      "\t #We can now PUT values across to this case. Usually performed via linked fields",
      "\t PUT(${3:<Some data>},${2:<Links field.Link Case Ref>})",
      "\t #When done, update and release the case for other users",
      "\t UPDATE(${1:<Case Number>},\"UNLOCK\")",
      "ELSEIF RETURN-VALUE = \"does not exist\" THEN",
      "\t # Case doesn't exist!",
      "ELSE",
      "\t # Case is locked to another user",
      "\t MESSAGE (\"Case: \",${1:<Case Number>},\" is locked to user \", RETURN-VALUE)",
      "END"
    ],
    "description": "use this function to check the status of a case prior to updating it\n RETURN-VALUE = “available” / “does not exist” / name of user who has the case locked"
  }
}
